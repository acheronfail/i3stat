# Optionally pass a path for the socket. This is really only useful if you have multiple bars and
# need to make sure they don't attempt to bind to the same socket. If not provided a default will
# be found.
# socket = "/custom/socket/path/here"

# Theme customisation
# All of these are optional, and will default to the values documented here.
[theme]
# should be the same as i3's bar.colors.background setting
bg = "#2e3440"
# should be the same as i3's bar.colors.statusline setting
fg = "#d8dee9"
# used to indicate inactive or disabled states
dim = "#4c566a"
# usually indicates a warning state
yellow = "#ebcb8b"
# be more warned than yellow
orange = "#d08770"
# it's red - everybody panic
red = "#bf616a"
# ahh green... green is good
green = "#a3be8c"
# usually indicates special states
purple = "#b48ead"
# also like purple, something special, not exactly anything specific
blue = "#8fbcbb"
# if enabled, then item separators are removed and a "powerline"-like style is used
powerline_enable = false
# the colors that are cycled through for each powerline item - at least two must be present
powerline = [
  { fg = "#d8dee9", bg = "#3b4252" },
  { fg = "#e5e9f0", bg = "#434c5e" },
  { fg = "#eceff4", bg = "#4c566a" },
  { fg = "#e5e9f0", bg = "#434c5e" },
]

## The list of bar items. Ordered left to right in the bar itself.
#
## COMMON OPTIONS
## All items share the the following config options:
# type:   required; the type of the item
# name:   optional; a name for the item - makes some ipc operations easier
# signal: optional; a real-time signal can be mapped to an item, and when istat receives this signal
#                   the item will be refreshed - useful for manually triggering item updates.
#                   The same signal can be used for multiple items.
#                   The `istat-signals` command can be used to query limits for signals on the
#                   current system.
#
## FLOAT FORMAT OPTIONS
## Some items which display a floating point integer allow customising its format with these options:
# pad:       optional; character to pad with. If not provided, no padding will be done
# pad_count: optional; how long to pad the number with. If not provided then it will pad to 3 digits
#                      before the decimal point.
# precision: optional; how many digits to display after the decimal point. Defaults to 0.
[[items]]
# Provides statistics of upload and download rates for all network interfaces
type = "net_usage"
# How often this item should refresh
interval = "1s"
# Anything under this threshold will show as "-"
minimum = "1 kiB"
# Up to 5 levels can be passed, and will affect the color of the item:
#     0..1st: theme.dim
#   1st..2nd: theme.normal
#   2nd..3rd: theme.warning
#   3rd..4th: theme.danger
#   4th..5th: theme.error
#   5th..MAX: theme.special
thresholds = ["1kiB", "1MiB", "10MiB", "25MiB", "100MiB"]

[[items]]
# Kerberos item - simply calls `klist` and displays the result
type = "krb"
# How often this item should refresh
interval = "2m"

[[items]]
# "Network Interfaces" item, provides an interactive list of interfaces and ip addresses, as well as
# WiFi signal strength and SSIDs if found. Supports updating itself automatically on network changes
# (via NetworkManager).
type = "nic"
# Optionally pass an `interval` to force updates (useful if you don't use NetworkManager)
# interval = "60s"

[[items]]
# Disk usage item - provides an interactive list of disks and their free space.
type = "disk"
# How often this item should refresh
interval = "60s"

[[items]]
# CPU usage item - provides updates of CPU usage expressed as a percentage
type = "cpu"
# How often this item should refresh
interval = "2s"
# See: FLOAT FORMAT OPTIONS
pad = ' '
pad_count = 2

[[items]]
# Display the temperature of a given component.
type = "sensors"
# See: COMMON OPTIONS
name = "cpu-temp"
# How often this item should refresh
interval = "5s"
# The name of the component to display temperature for.
# The `istat-sensors` command is provided and outputs a list of components that can be used.
label = "coretemp Package id 0"

[[items]]
# Display information about the system's memory usage
type = "mem"
# How often this item should refresh
interval = "10s"
# Also includes FLOAT FORMAT OPTIONS

[[items]]
# Display infomation about the current sink (sound output) and source (sound input). This is a very
# versatile item and has a tight integration to pulseaudio/pipewire.
# Scrolling up/down will change the volume of the current sink. The same while holding `Shift` will
# change the volume of the current source.
# Middle clicking will mute the current sink. The same with `Shift` will mute the current source.
# Left clicking will execute `pavucontrol`.
#
# This item also has a highly featured ipc interface, see `istat-ipc custom pulse` for more info.
type = "pulse"
# Set an upper limit to the volume, expressed in percent.
max_volume = 120
# Configure optional notifications, supported values are:
#   none            no notifications (the default)
#   volume_mute     notifications on volume up/down and mute
#   new_source_sink notifications when new sources/sinks are added
#   defaults_change notifications when the default source/sink changes
#   all             all notifications
notify = "all"

[[items]]
# Show information about CapsLock/NumLock/ScrollLock.
type = "kbd"
# Which keys to show, available options are: caps_lock, num_lock or scroll_lock
show = ["caps_lock", "num_lock"]
# This item doesn't watch any keyboard input or anything, so to make it useful it's recommended to
# assign a signal to it here, and then bind a key to that in i3' config in order to refresh it.
# For example: `bindsym --release Caps_Lock exec pkill -RTMIN+4 istat`.
# See: COMMON OPTIONS
signal = 4

[[items]]
# Display information about a battery
type = "battery"
# How often this item should refresh
interval = "10s"
# Optionally specificy a list of particular batteries to show. If not provided, it will attempt to
# discover all the batteries on the system.
# batteries = ["/sys/class/power_supply/BAT0"]

[[items]]
# Display the current date or time
type = "time"
# Format for the long display
format_long = "%Y-%m-%d %H:%M:%S"
# Format for the short display (i3bar will show the short text of an item if space is limited)
format_short = "%H:%M"
# How often this item should refresh
interval = "1s"

[[items]]
# Run a script and display its output as an item. By default the command's STDOUT is displayed.
# Arguments are passed via the environment to the script:
#   I3_SIGNAL     set to "true" is this refresh was triggered by a signal
# The following are passed through from the i3 click event:
#   I3_NAME
#   I3_MODIFIERS
#   I3_BUTTON
#   I3_X
#   I3_Y
#   I3_RELATIVE_X
#   I3_RELATIVE_Y
#   I3_OUTPUT_X
#   I3_OUTPUT_Y
#   I3_WIDTH
#   I3_HEIGHT
type = "script"
# See: COMMON OPTIONS
name = "clicks"
# The command to run
command = "echo -n `if [ ! -z $I3_BUTTON ]; then echo button=$I3_BUTTON; else echo bar item; fi`"
# The format of the output, either: simple or json. Defaults to simple.
output = "simple"
# The markup of the output, either: none or pango. This is the same as i3's markup property.
# Defaults to none.
markup = "none"

[[items]]
# An example of a script using pango formatting and JSON output.
type = "script"
name = "custom"
command = """ echo -n '{"full_text":"<span foreground=\\"orange\\">G'"'"'day</span>"}' """
output = "json"
markup = "pango"

[[items]]
# A simple item which will display an icon if Dunst is currently paused. Can be used as an
# indicator for a simple "do not disturb" mode.
type = "dunst"
